---
title: "practica_final"
format: html
editor: visual
---

Vamos a utilizar el dataset de semillas que se encuentra aquí: https://archive.ics.uci.edu/ml/datasets/seeds#

Primero vamos a descargarnos el dataset con el siguiente comando:

```{r}
library(tidyverse)
df_seeds <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/00236/seeds_dataset.txt', col.names =c('area','perimetro','compacto','longitud','anchura','coeficient.asimetria','longitud.ranura','tipo'))

head(df_seeds)
```

#### PREGUNTA 1

¿Cuantas filas y cuantas columnas tiene el dataframe df_seeds?

**Respuesta**:

```{r}
dim(df_seeds)

# o en todo caso
 columnas <- ncol (df_seeds)
 filas <- nrow(df_seeds)
 paste("El dataframe df_seeds tiene",columnas,"columnas y", filas, "filas." )
```

#### PREGUNTA 2

Vamos a convertir en factor la columna tipo. Vamos a reemplazar los números por su correspondiente etiqueta (label). La correspondencia entre el código y el tipo es:

-   1 - Kama
-   2 - Rosa
-   3 - Canadian

Convierte en factor la columna tipo, respetando las etiquetas:

**Respuesta**:

```{r}

df_seeds$tipo <- factor(df_seeds$tipo, levels =c(1,2,3), labels = c("Kama", "Rosa","Canadian"))


head(df_seeds$tipo)

```

#### PREGUNTA 3

¿Cual es la media del area de cada uno de los tipos?

**Respuesta**

```{r}
area_media <- df_seeds |> group_by(tipo) |> summarise(area_media= mean(area))



paste("El área media por tipo es:Kama:", area_media[1,],"; Rosa:", area_media[2,], "; Canadian:", area_media[3,])
```

#### PREGUNTA 4

¿Como se llama el siguiente tipo de gráfico?. ¿Qué representa la línea del centro de la caja?

```{r}
ggplot(df_seeds, aes(x=tipo, y=area)) + geom_boxplot()
```

**Respuesta**: el gráfico es un Boxplot y las lineas de centro de caja del rango intercuartil representan la mediana.

#### PREGUNTA 5

¿Como pintarías un diagrama de puntos (o scatterplot) con ggplot con las siguientes características? - En el eje X la variable compacto - En el eje Y la variable area - Cada tipo de semilla debería tener un color diferente

**Respuesta**:

```{r}
ggplot(df_seeds, aes(x=compacto,y=area, color=tipo))+geom_point()
```

#### PREGUNTA 6

¿Qué hace la siguiente línea?:

```{r}
df_seeds |> mutate(is_kama = tipo=='Kama') -> df_seeds
df_seeds
```

**Respuesta**: Se ha agregado la columna is_kama en la última columna del Dataframe donde si se cumple que el tipo es Kama entonces mostrará TRUE, caso contrario FALSE.

#### PREGUNTA 7

Vamos a dividir el conjunto de datos en test y training porque vamos a entrenar un modelo que me permita diferenciar si una semilla es de tipo Kama o no. ¿Por qué es aconsejable dividir el dataset en los grupos de train y test?

```{r}
set.seed(123) # Este set.seed hace que a todos nos generen los mismos número aleatorios
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]

df_seeds_train
df_seeds_test
```

**Respuesta**: la parte Train lo usaremos para entrenar el modelo y la parte Test, que es de menor tamaño, será para evaluar la calidad del modelo entrenado, de esta forma podremos comprobar la validez del modelo de manera efectiva.

#### PREGUNTA 8

Vamos a crear un modelo para realizar una clasificación binaria, donde le pasaremos como entrada las columnas: area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura

¿Qué tipo de algoritmo o modelo debería usar?

**Respuesta**: En este caso usaremos un modelo de Regresión Logistica Binaria, donde se sigue una distribución binaria cuyos valores son 0 o 1.

#### PREGUNTA 9

Crea un modelo que me permita clasificar si una semilla es de tipo Kama o no con las siguientes columnas: area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura

**Respuesta**:

```{r}
model<-glm(data=df_seeds_train,
           formula=is_kama~ . -anchura-tipo,#las columnas que no nos sirven
           family=binomial(link='logit'))

betalg<-model$coefficients

model
```

#### PREGUNTA 10

Si usamos un umbral de 0 en la salida del modelo (lo que equivale a probabilidad de 0.5 cuando usamos el predict con type='response') ¿Cuales son los valores de precisión y exhausitividad?

**Respuesta**.

```{r}
umbral <- 0
pred_test<-predict(model, df_seeds_test)
M=table(real=df_seeds_test$is_kama, pred=pred_test>umbral)
M

```

```{r}
paste("La precisión es:",M[2,2]/(M[1,2]+M[2,2]))
paste("La exhaustividad es:",M[2,2]/(M[2,1]+M[2,2]))
```

#### PREGUNTA 11

¿Qué están haciendo las siguientes líneas?

```{r}
set.seed(123)
cl<-df_seeds |> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) |> kmeans(3)
table(real=df_seeds$tipo,cluster=cl$cluster)
```

**Respuesta**:

-   set.seed genera números aleatorios en la posicion 123, además una propiedad de esta función es que se elimina los efectos aleatorios cada vez que corremos el modelo.

-   creamos la variable "cl" y se realiza una concatenación. La función kmeans para encontrar grupos de observaciones parecidas, agrupa objetos en k grupos, en este caso 3, basándose en la mínima suma de distancias entre cada objeto y el centroide de su grupo o cluster. finalmente se genera la tabla con los cluster generado por tipo.

```{r}

```
